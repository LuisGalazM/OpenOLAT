@use "sass:map";
@use "sass:math";
@use "sass:color";
@use "sass:string";

@mixin o-make-message-box($bgcolor, $color, $boxicon:false){
	margin: $o-box-margin 0;
	padding: $o-box-padding;
	border: $o-box-border-size solid $color;
	border-radius: $o-box-border-radius;
	background-color: $bgcolor;
	h2, h3, h4, h5 { color: $text-color;}
	
	@if $boxicon {
		position: relative;
		@include o-add-icon-font();
		@include o-add-icon($boxicon);
		&:before {
			position: absolute;
			left: floor($o-box-padding * 0.5);
			top: $o-box-padding;
			color: $color;
			font-size: floor($font-size-base * 1.5);
			text-align: center;
			width: $fa-fw-width;
		}
		padding-left: floor($font-size-base * 1.8) + $o-box-padding;
	}
}
@mixin o-make-message-line($bgcolor, $color) {
	background-color: $bgcolor;
	color: $color;
	padding: $o-message-line-padding;
	border-radius: $o-message-line-radius;
}

/* bootstrap override */
@mixin o-alert-variant($bgcolor, $color, $boxicon:false){
	.modal-header {
		h4 {
			color: $text-color;
			font-size: 2em;
			position: relative;
			@if $boxicon {
				@include o-add-icon-font();
				@include o-add-icon($boxicon);
				&:before {
					position: absolute;
					left: 0;
					top: 0;
					font-size: 1.1em;
					color: $color;
					text-align: center;
					width: $fa-fw-width;
				}
				padding-left: floor($font-size-base * 2.5) + $o-box-padding;
			}
		}
		button {
			position: relative;
			z-index:1;
		}
	}
	.alert {
		color: $text-color;
		border: none;
		hr {
	    	border-top: 0;
	  	}		
		margin: 0;
		padding: floor($o-box-padding * 2) $o-box-padding;
		background-color: $bgcolor;
		h2, h3, h4, h5 { color: $text-color;}
	}

}


/* Redundant style from font-awesome to support sass extend mechanism 					*/
/* Better use o-add-icon-font() together with o-add-icon() if you need a custom icon	*/
@mixin o-make-icon() {
  @include fa-icon;
  display: $fa-display;  
  font-family: $fa-style-family;
  font-weight: 800;
  font-style: normal;
  font-variant: normal;
  line-height: 1;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Helper to add the FontAwesome font to a custom icon. If possible use a direct icon using the i-tag */
/* beforeElement = true: use before pseudo element (default); false: use after pseudo element 		  */ 
@mixin o-add-icon-font($beforeElement: true) {
	@if $beforeElement {
		&:before { 
			@include o-make-icon();
		}
	}
	@else {
		&:after { 			
			@include o-make-icon();
		}
	}
}

/* Helper to add a FontAwesome icon to a css element 											*/
/* iconName = the FontAwesome icon name 														*/
/* solidStyle = true: use solid font style (default); false: use regular / light style 			*/
/* beforeElement = true: use before pseudo element (default); false: use after pseudo element	*/ 
@mixin o-add-icon($iconName, $solidStyle: true, $beforeElement: true) {
	$faVar : map.get( $fa-icons, $iconName);
	@if not $faVar {
		@error 'FontAwesome icon not found with name "' + $iconName + '"';
	}
	@if $beforeElement {
		&:before { 
			content : unquote("\"#{ $faVar }\"");
			@if $solidStyle {
				font-weight: 800;
			} @else {
				font-weight: 400;
			}
		}
	}
	@else {
		&:after { 			
			content : unquote("\"#{ $faVar }\""); 
			@if $solidStyle {
				font-weight: 800;
			} @else {
				font-weight: 400;
			}
		}
	}
}

/* Helper to add a FontAwesome brand icon to a css element 										*/
/* iconName = the FontAwesome icon name 														*/
@mixin o-add-brand-icon($iconName) {
	font-family: 'Font Awesome 6 Brands';
	font-weight: 400;
	&:before { 
		$faVar : map.get( $fa-brand-icons, $iconName);
		content : unquote("\"#{ $faVar }\""); 
		@if not $faVar {
			@debug 'FontAwesome icon not found with name "' + $iconName + '"';
		}
	}
}

/* Helper to add a FontAwesome icon to a button element											*/
/* iconName = the FontAwesome icon name 														*/
/* solidStyle = true: use solid font style (default); false: use regular / light style 			*/

@mixin o-add-button-icon-left($iconName, $solidStyle: true) {
	@include o-add-icon($iconName, $solidStyle);
	&:before {
		@include o-make-icon();
		margin-right: 5px;
	}
}

/* Helper to add hover colors if not using standad hover effect */
@mixin o-add-button-hover($color,$background,$border) {
  &:focus,
  &.focus {
    color: $color;
    background-color: $background;
    border-color: $border;
  }
  &:hover {
    color: $color;
    background-color: $background;
    border-color: $border;
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: $background;
      border-color: $border;
    }
  }
}



@mixin o-make-glossy-bg($basecolor) {
	background: $basecolor;
	background: -moz-linear-gradient(top, lighten($basecolor,40%) 0%,lighten($basecolor,10%) 50%,$basecolor 51%,lighten($basecolor,20%) 100%);
	background: -webkit-linear-gradient(top, lighten($basecolor,40%) 0%,lighten($basecolor,10%) 50%,$basecolor 51%,lighten($basecolor,20%) 100%);
	background: linear-gradient(top, lighten($basecolor,40%) 0%,lighten($basecolor,10%) 50%,$basecolor 51%,lighten($basecolor,20%) 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$basecolor', endColorstr='lighten($basecolor,20%)',GradientType=0 );
}